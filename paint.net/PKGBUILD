# Maintainer: David Macek <david.macek.0@gmail.com>

_realname=paint.net
_choconame=paint.net
pkgbase="app-${_realname}"
pkgname=("app-x86_64-${_realname}")
epoch=1
pkgver=5.0.13
pkgrel=1
pkgdesc="A free image and photo editing software"
url="https://www.getpaint.net"
arch=('any')
license=('custom')
replaces=("app-i686-${_realname}")
makedepends=("p7zip" "mingw-w64-x86_64-jq")
provides=("${pkgbase}")
options=(!strip)
source=("paint.net.install.x64.zip::https://github.com/paintdotnet/release/releases/download/v${pkgver}/paint.net.${pkgver}.install.x64.zip")
sha512sums=('4c165ec84fa61bba6c027ae50610c67f2cfa488e5a73e744e3e3f6b1d0fd0bc8afd0565f661a302e3fe573eeec21cb4d446ca2a9a7324177a0f4c7cca6e1b9ec')

_dotnet() {
    local runtimetarget="$(cat "${1}.deps.json" | /mingw64/bin/jq -r '.runtimeTarget.name')"
    local netcore="$(cat "${1}.deps.json" | /mingw64/bin/jq --arg runtimetarget "${runtimetarget}" -r '.targets[$runtimetarget] | keys | .[] | select(test("^runtimepack[.]Microsoft[.]NETCore[.]App[.][Rr]untime[.]win-x64/"))')"
    local windowsdesktop="$(cat "${1}.deps.json" | /mingw64/bin/jq --arg runtimetarget "${runtimetarget}" -r '.targets[$runtimetarget] | keys | .[] | select(test("^runtimepack[.]Microsoft[.]WindowsDesktop[.]App[.][Rr]untime[.]win-x64/"))')"

    cat "${1}.deps.json" | /mingw64/bin/jq -r --arg runtimetarget "${runtimetarget}" --arg netcore "${netcore}" --arg windowsdesktop "${windowsdesktop}" '.targets[$runtimetarget] | (.[$netcore], .[$windowsdesktop]) | (.runtime, .native) | select(.) | keys | .[]' | dos2unix | sort | uniq | (cd "$(dirname "${1}")" && xargs rm -f)

    cat "${1}.deps.json" | /mingw64/bin/jq -r --arg runtimetarget "${runtimetarget}" --arg netcore "${netcore}" --arg windowsdesktop "${windowsdesktop}" 'del(.targets[$runtimetarget][$netcore]) | del(.targets[$runtimetarget][$windowsdesktop])' > "${1}.deps.json.tmp"
    mv -f "${1}.deps.json.tmp" "${1}.deps.json"

    cat "${1}.runtimeconfig.json" | /mingw64/bin/jq '.runtimeOptions |= (.framework = .includedFrameworks[-1] | del(.includedFrameworks))' > "${1}.runtimeconfig.json.tmp"
    mv -f "${1}.runtimeconfig.json.tmp" "${1}.runtimeconfig.json"
}

_rmmsdll() {
    local ms

    ms=("msvbvm[0-9]+"
        "ucrtbase"
        "mfcm?[0-9]+[a-z]+"
        "msvc[rp][0-9]+(_([0-9]|codecvt_ids|atomic_wait))?"
        "vc([ao]mp|corlib|runtime)[0-9]+(_([0-9]|threads))?"
        "concrt[0-9]+"
        "pgort[0-9]+"
        "api-ms-win-[0-9a-z-]+")
    find "${1}" -iname '*.dll' | grep -Eif <(for m in "${ms[@]}"; do echo "/${m}[.]dll$"; done) | xargs -r rm
}

prepare() {
    7z x -y -bd "paint.net.${pkgver}.install.x64.exe" -o"paint.net.install.x64.dir" > /dev/null
}

package() {
    local a="${pkgdir}/apps/${_realname}"
    mkdir -p "${a}"
    cp -R "paint.net.install.x64.dir/x64"/* "${a}"
    mkdir "${a}"/{Effects,FileTypes,Shapes}
    rm -R "${a}/SetupDownloader" "${a}"/SetupFrontEnd.* "${a}/PaintDotNet_x64.msi"
    rm "${a}"/*.pdb
    _rmmsdll "${a}"
    _dotnet "${a}/paintdotnet"
}
