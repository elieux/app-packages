# Maintainer: David Macek <david.macek.0@gmail.com>

_realname=virtualbox
pkgbase="app-${_realname}"
pkgname=("app-x86_64-${_realname}")
epoch=1
pkgver=7.0.6.155176
pkgrel=1
pkgdesc="Powerful x86 and AMD64/Intel64 virtualization product for enterprise as well as home use"
url="https://www.virtualbox.org/"
arch=('any')
license=('GPL2')
provides=("${pkgbase}")
makedepends=("p7zip" "mingw-w64-x86_64-gcc")
options=(!strip)
source=("VirtualBox-Win.exe::https://download.virtualbox.org/virtualbox/${pkgver%.*}/VirtualBox-${pkgver%.*}-${pkgver##*.}-Win.exe"
        "VirtualBox.tar.bz2::https://download.virtualbox.org/virtualbox/${pkgver%.*}/VirtualBox-${pkgver%.*}.tar.bz2"
        "VirtualBoxSDK.zip::https://download.virtualbox.org/virtualbox/${pkgver%.*}/VirtualBoxSDK-${pkgver%.*}-${pkgver##*.}.zip"
        "comsupp.cpp"
        "0004-remove-__function__.patch"
        "0005-remove-__try-__except.patch")
sha512sums=('c787271617785e94719e2bc5ec9a9f70455b61e6408f5f69e0bdaf2718d0d7e00fa8b7f044bbe78b98abbc474c6b25767520efb4c5baf80cd1f91369126e5688'
            'f9db7a154e392f550f50abe774fc6263eb0b6f86dccc069f2c5012fedbe2debbf5b8ba62cca44ea0d5d5475652188176bfb888266f69197677b22854f02b64a0'
            '5b27804063906654f56bc0cf586e3112b7530a1d2840e33b102dc7edd05379d62a6448277d1a5ded4047e4446327db3b696d486194b3f737f5821a2ff250191e'
            '32173292f6c7644604ca624bb8e822ccb360726b3681d70cc469468d9c954ff971382a3decbce2461b530c9856467f49ef555f7444f8aa34a652f7674f51d873'
            '55faec07873c96a8b2e1e0a90a4c0529b2d40ead18ab972c2477d8eaaaf314603772dab8dbbdf0bf1e5312756dad784e749c5a954f85123d8607855bfc890a85'
            'efc61d88568526a9b1b4d12526a44ffe8b810052e02962b40cfe4ae85a44265e953d74c55be687b3d5a892c29d967a5a3dcc3fc35b20c88882e2b343f8d614eb')

_lc() {
    local d f n

    for f in "${@}"
    do
        d="$(dirname "${f}")"
        f="$(basename "${f}")"
        n="$(echo "${f}" | tr 'A-Z' 'a-z')"
        if test "${f}" != "${n}"
        then
            mv "${d}/${f}" "${d}/${n}"
        fi
    done
}

prepare() {
    7z x -y -bd "VirtualBox-Win.exe" -o"VirtualBox-Win.dir" > /dev/null

    mkdir -p "build"
    cp -R "VirtualBox-${pkgver%.*}/include" "build"
    mkdir -p "build/src/VBox"
    cp -R "VirtualBox-${pkgver%.*}/src/VBox/HostDrivers" "build/src/VBox"
    cp -R "VirtualBox-${pkgver%.*}/src/VBox/Runtime" "build/src/VBox"
    mkdir -p "build/src/VBox/Main"
    cp -R "VirtualBox-${pkgver%.*}/src/VBox/Main/glue" "build/src/VBox/Main"

    cd "build"
    patch -p1 -i "${srcdir}/0004-remove-__function__.patch"
    patch -p1 -i "${srcdir}/0005-remove-__try-__except.patch"
}

cxx() {
    PATH="/mingw64/bin:$PATH" g++ -Wall -Wextra -Wno-unknown-pragmas -Wno-missing-field-initializers -Wno-dangling-else -fpermissive -std=c++11 "-I${srcdir}/build/include" "-I${srcdir}/build/src/VBox/Runtime/include" -DVBOX_COM_NO_ATL -DIN_RING3 "${@}"
}

link() {
    cxx "${@}" "VBoxDrvCfg.o" "VBoxNetCfg.o" "comsupp.o" "string.o" "ministring.o" "${srcdir}/VirtualBox-Win.dir/file_VBoxRT.dll" -lole32 -loleaut32 -lsetupapi -liphlpapi -lnewdev -lws2_32 -luuid -lwbemuuid
}

build() {
    cd "build"
    cxx -c -municode -D_UNICODE -o "comsupp.o" "../comsupp.cpp"
    cxx -c -municode -D_UNICODE -o "string.o" "src/VBox/Main/glue/string.cpp"
    cxx -c -municode -D_UNICODE -o "ministring.o" "src/VBox/Runtime/common/string/ministring.cpp"
    cxx -c -municode -D_UNICODE -o "VBoxNetCfg.o" "src/VBox/HostDrivers/VBoxNetFlt/win/cfg/VBoxNetCfg.cpp"
    cxx -c -municode -D_UNICODE -o "VBoxDrvCfg.o" "src/VBox/HostDrivers/win/cfg/VBoxDrvCfg.cpp"
    link -o "NetAdp6Install.exe"   "src/VBox/HostDrivers/VBoxNetFlt/win/tools/VBoxNetAdpInstall.cpp"   -DNDIS60=1
    link -o "NetAdp6Uninstall.exe" "src/VBox/HostDrivers/VBoxNetFlt/win/tools/VBoxNetAdpUninstall.cpp" -DNDIS60=1
    link -o "NetAdpInstall.exe"    "src/VBox/HostDrivers/VBoxNetFlt/win/tools/VBoxNetAdpInstall.cpp"
    link -o "NetAdpUninstall.exe"  "src/VBox/HostDrivers/VBoxNetFlt/win/tools/VBoxNetAdpUninstall.cpp"
    link -o "NetFltInstall.exe"    "src/VBox/HostDrivers/VBoxNetFlt/win/tools/VBoxNetFltInstall.cpp"
    link -o "NetFltUninstall.exe"  "src/VBox/HostDrivers/VBoxNetFlt/win/tools/VBoxNetFltUninstall.cpp"
    link -o "NetLwfInstall.exe"    "src/VBox/HostDrivers/VBoxNetFlt/win/tools/VBoxNetLwfInstall.cpp"
    link -o "NetLwfUninstall.exe"  "src/VBox/HostDrivers/VBoxNetFlt/win/tools/VBoxNetLwfUninstall.cpp"
    link -o "USBInstall.exe"       "src/VBox/HostDrivers/VBoxUSB/win/install/USBInstall.cpp"
    link -o "USBUninstall.exe"     "src/VBox/HostDrivers/VBoxUSB/win/install/USBUninstall.cpp"
    link -o "SUPInstall.exe"       "src/VBox/HostDrivers/Support/testcase/SUPInstall.cpp"
    link -o "SUPUninstall.exe"     "src/VBox/HostDrivers/Support/testcase/SUPUninstall.cpp"
}

package() {
    local a="${pkgdir}/apps/${_realname}"
    mkdir -p "${a}"
    cp -R "VirtualBox-Win.dir"/* "${a}"
    cp -R "sdk" "${a}"

    local f
    for f in "${a}"/file_*
    do
        f="$(basename "${f}")"
        mv "${a}/${f}" "${a}/${f#file_}"
    done

    local d="${a}/doc"
    mkdir -p "${d}"
    mv "${a}/UserManual.pdf" "${d}"

    local d="${a}/drivers/network/netadp6"
    mkdir -p "${d}"
    mv "${a}"/VBoxNetAdp6*.{cat,inf,sys} "${d}"
    cp "${d}/VBoxNetAdp6_W10.cat" "${d}/VBoxNetAdp6.cat"
    cp "build"/NetAdp6{In,Unin}stall.exe "${d}"

    local d="${a}/drivers/network/netadp"
    mkdir -p "${d}"
    mv "${a}"/VBoxNetAdp*.{cat,inf,sys} "${d}"
    cp "build"/NetAdp{In,Unin}stall.exe "${d}"

    local d="${a}/drivers/network/netflt"
    mkdir -p "${d}"
    mv "${a}"/VBoxNetFlt*.{cat,inf,sys} "${d}"
    mv "${d}/VBoxNetFltNobj.sys" "${d}/VBoxNetFltNobj.dll"
    cp "build"/NetFlt{In,Unin}stall.exe "${d}"

    local d="${a}/drivers/network/netlwf"
    mkdir -p "${d}"
    mv "${a}"/VBoxNetLwf*.{cat,inf,sys} "${d}"
    cp "${d}/VBoxNetLwf_W10.cat" "${d}/VBoxNetLwf.cat"
    cp "build"/NetLwf{In,Unin}stall.exe "${d}"

    local d="${a}/drivers/USB/filter"
    mkdir -p "${d}"
    mv "${a}"/VBoxUSBMon*.{cat,inf,sys} "${d}"
    cp "${d}/VBoxUSBMon_W10.cat" "${d}/VBoxUSBMon.cat"

    local d="${a}/drivers/USB/device"
    mkdir -p "${d}"
    mv "${a}"/VBoxUSB*.{cat,inf,sys} "${d}"
    cp "${d}/VBoxUSB_W10.cat" "${d}/VBoxUSB.cat"

    local d="${a}/drivers/USB/install"
    mkdir -p "${d}"
    cp "build"/USB{In,Unin}stall.exe "${d}"
    ln "${a}/drivers/USB/device"/* "${d}"
    ln "${a}/drivers/USB/filter"/* "${d}"

    local d="${a}/drivers/vboxsup"
    mkdir -p "${d}"
    mv "${a}"/VBoxSup*.{cat,inf,sys} "${d}"
    cp "${d}/VBoxSup_PreW10.cat" "${d}/VBoxSup.cat"
    cp "build"/SUP{In,Unin}stall.exe "${d}"

    local d="${a}/dtrace/lib/amd64"
    mkdir -p "${d}"
    local f n
    for f in "${a}"/dtrace_lib_arch_*.d
    do
        f="$(basename "${f}")"
        n="${f#dtrace_lib_arch_}"
        n="${n//_/-}"
        mv "${a}/${f}" "${d}/${n}"
    done

    local d="${a}/dtrace/testcase/amd64"
    mkdir -p "${d}"
    local f n
    for f in "${a}"/dtrace_testcase_arch_*.d
    do
        f="$(basename "${f}")"
        n="${f#dtrace_testcase_arch_}"
        n="${n//_/-}"
        mv "${a}/${f}" "${d}/${n}"
    done

    local d="${a}/nls"
    mkdir -p "${d}"
    local f
    for f in "${a}"/nlsgui*
    do
        f="$(basename "${f}")"
        mv "${a}/${f}" "${d}/VirtualBox_${f#nlsgui}.qm"
    done
    for f in "${a}"/nlsqt*
    do
        f="$(basename "${f}")"
        mv "${a}/${f}" "${d}/qt_${f#nlsqt}.qm"
    done

    local d="${a}/platforms"
    mkdir -p "${d}"
    mv "${a}"/q{minimal,offscreen,windows}.dll "${d}"

    local d="${a}/sqldrivers"
    mkdir -p "${d}"
    mv "${a}"/qsql*.dll "${d}"

    local d="${a}/styles"
    mkdir -p "${d}"
    mv "${a}"/q*style.dll "${d}"

    local d="${a}/UnattendedTemplates"
    mkdir -p "${d}"
    mv "${a}"/*_*.{sh,cfg,rsp,sif,xml,cmd} "${d}"
    mv "${a}/os2_util.exe" "${d}"

    local d="${a}/x86"
    mkdir -p "${d}"
    local f
    for f in "${a}"/*_x86
    do
        f="$(basename "${f}")"
        mv "${a}/${f}" "${d}/${f%_x86}-x86.dll"
    done

    local f
    for f in $(find "${a}" -maxdepth 1 -type f -not -iname "*.*")
    do
        f="$(basename "${f}")"
        mv "${a}/${f}" "${a}/${f}.dll"
    done
    mv "${a}/VBoxSDS.dll" "${a}/VBoxSDS.exe"
    mv "${a}/VBoxSVC.dll" "${a}/VBoxSVC.exe"
    mv "${a}/vbox_img.exe" "${a}/vbox-img.exe"
    rm "${a}"/*.py

    _lc "${a}"/*
    ln "${a}/vboxrt.dll" "${a}/drivers/network/netadp6/vboxrt.dll"
    ln "${a}/vboxrt.dll" "${a}/drivers/network/netadp/vboxrt.dll"
    ln "${a}/vboxrt.dll" "${a}/drivers/network/netflt/vboxrt.dll"
    ln "${a}/vboxrt.dll" "${a}/drivers/network/netlwf/vboxrt.dll"
    ln "${a}/vboxrt.dll" "${a}/drivers/USB/install/vboxrt.dll"
    ln "${a}/vboxrt.dll" "${a}/drivers/vboxsup/vboxrt.dll"
}
