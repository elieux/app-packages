# Maintainer: David Macek <david.macek.0@gmail.com>

_extract_subdir() {
    local _file="$(get_filename "${1}")"
    local _dir="${_file%.*}"
    if type bsdtar | head -1 | grep -q 'is a function'
    then
        local _original_bsdtar="$(type bsdtar | tail +2)"
    fi
    bsdtar() {
        local _extra_args=()
        if [ "${1}" = "-xf" ]
        then
            mkdir -p "${_dir}"
            _extra_args=(-C "${_dir}")
        fi
        /usr/bin/bsdtar "${_extra_args[@]}" "${@}"
    }
    extract_file "${_file}"
    unset -f bsdtar
    eval "${_original_bsdtar}"
}

extract_https@subdir() {
    _extract_subdir "${@}"
}

download_https@subdir() {
    download_file "${1/@subdir:/:}"
}

_realname=powershell
pkgbase="app-${_realname}"
pkgname=("app-x86_64-${_realname}")
epoch=1
pkgver=7.0.2
pkgrel=1
pkgdesc="A cross-platform automation and configuration tool/framework"
url="https://github.com/PowerShell/PowerShell"
arch=('any')
license=('MIT')
provides=("${pkgbase}")
options=(!strip)
source=("PowerShell-win-x64.zip::https@subdir://github.com/PowerShell/PowerShell/releases/download/v${pkgver}/PowerShell-${pkgver}-win-x64.zip")
sha512sums=('1b78af4b9a4052c5e49653f937693f08e263c41b81fb4597631c03ce40a28d7bdc436faefe4e4f571b35c8f8d26ef0931aba352f87a58109f1b58bca7ce0eb85')

_rmmsdll() {
    local ms

    ms=("msvbvm[0-9]+"
        "ucrtbase"
        "mfcm?[0-9]+[a-z]+"
        "msvc[rp][0-9]+(_([0-9]|codecvt_ids))?"
        "vc([ao]mp|corlib|runtime)[0-9]+(_[0-9])?"
        "concrt[0-9]+"
        "pgort[0-9]+"
        "api-ms-win-[0-9a-z-]+")
    find "${1}" -iname '*.dll' | grep -Eif <(for m in "${ms[@]}"; do echo "/${m}[.]dll$"; done) | xargs -r rm
}

package() {
    local a="${pkgdir}/apps/${_realname}"
    mkdir -p "${a}"
    cp -R "PowerShell-win-x64"/* "${a}"

    cat "PowerShell-win-x64/pwsh.deps.json" | sed -r '/(api-ms-win|API-MS-Win|ucrtbase)/,/[}]/d' | sed -r '/[}],/{ N; s/[}],(\n +[}])/}\1/ }' | unix2dos > "${a}/pwsh.deps.json"
    _rmmsdll "${a}"
}
