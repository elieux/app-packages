# Maintainer: David Macek <david.macek.0@gmail.com>

_extract_subdir() {
    local _file="$(get_filename "${1}")"
    local _dir="${_file%.*}"
    if type bsdtar | head -1 | grep -q 'is a function'
    then
        local _original_bsdtar="$(type bsdtar | tail +2)"
    fi
    bsdtar() {
        local _extra_args=()
        if [ "${1}" = "-xf" ]
        then
            mkdir -p "${_dir}"
            _extra_args=(-C "${_dir}")
        fi
        /usr/bin/bsdtar "${_extra_args[@]}" "${@}"
    }
    extract_file "${_file}"
    unset -f bsdtar
    eval "${_original_bsdtar}"
}

extract_https@subdir() {
    _extract_subdir "${@}"
}

download_https@subdir() {
    download_file "${1/@subdir:/:}"
}

_realname=paint.net
_choconame=paint.net
pkgbase="app-${_realname}"
pkgname=("app-x86_64-${_realname}")
epoch=1
pkgver=5.1.6
pkgrel=2
pkgdesc="A free image and photo editing software"
url="https://www.getpaint.net"
arch=('any')
license=('custom')
replaces=("app-i686-${_realname}")
makedepends=("mingw-w64-x86_64-jq")
provides=("${pkgbase}")
options=(!strip)
source=("paint.net.portable.x64.zip::https@subdir://github.com/paintdotnet/release/releases/download/v${pkgver}/paint.net.${pkgver}.portable.x64.zip")
sha512sums=('9cb0069d62026fb5e8ad541aa3addf92837e7d413343e8343a0b999b3f5834e44b60a54feec4cb6e5863c624cff4db15bd42e777dd5bfa92075e9f2b154bdcb8')

_dotnet() {
    local runtimetarget="$(cat "${1}.deps.json" | /mingw64/bin/jq -r '.runtimeTarget.name')"
    local netcore="$(cat "${1}.deps.json" | /mingw64/bin/jq --arg runtimetarget "${runtimetarget}" -r '.targets[$runtimetarget] | keys | .[] | select(test("^runtimepack[.]Microsoft[.]NETCore[.]App[.][Rr]untime[.]win-x64/"))')"
    local windowsdesktop="$(cat "${1}.deps.json" | /mingw64/bin/jq --arg runtimetarget "${runtimetarget}" -r '.targets[$runtimetarget] | keys | .[] | select(test("^runtimepack[.]Microsoft[.]WindowsDesktop[.]App[.][Rr]untime[.]win-x64/"))')"

    cat "${1}.deps.json" | /mingw64/bin/jq -r --arg runtimetarget "${runtimetarget}" --arg netcore "${netcore}" --arg windowsdesktop "${windowsdesktop}" '.targets[$runtimetarget] | (.[$netcore], .[$windowsdesktop]) | (.runtime, .native) | select(.) | keys | .[]' | dos2unix | sort | uniq | (cd "$(dirname "${1}")" && xargs rm -f)

    cat "${1}.deps.json" | /mingw64/bin/jq -r --arg runtimetarget "${runtimetarget}" --arg netcore "${netcore}" --arg windowsdesktop "${windowsdesktop}" 'del(.targets[$runtimetarget][$netcore]) | del(.targets[$runtimetarget][$windowsdesktop])' > "${1}.deps.json.tmp"
    mv -f "${1}.deps.json.tmp" "${1}.deps.json"

    cat "${1}.runtimeconfig.json" | /mingw64/bin/jq '.runtimeOptions |= (.framework = .includedFrameworks[-1] | del(.includedFrameworks))' > "${1}.runtimeconfig.json.tmp"
    mv -f "${1}.runtimeconfig.json.tmp" "${1}.runtimeconfig.json"
}

_rmmsdll() {
    local ms

    ms=("msvbvm[0-9]+"
        "ucrtbase"
        "mfcm?[0-9]+[a-z]+"
        "msvc[rp][0-9]+(_([0-9]|codecvt_ids|atomic_wait))?"
        "vc([ao]mp|corlib|runtime)[0-9]+(_([0-9]|threads))?"
        "concrt[0-9]+"
        "pgort[0-9]+"
        "api-ms-win-[0-9a-z-]+")
    find "${1}" -iname '*.dll' | grep -Eif <(for m in "${ms[@]}"; do echo "/${m}[.]dll$"; done) | xargs -r rm
}

package() {
    local a="${pkgdir}/apps/${_realname}"
    mkdir -p "${a}"
    cp -R "paint.net.portable.x64"/* "${a}"
    rm "${a}/PaintDotNet.Configuration.json"
    rm "${a}"/*.pdb
    _rmmsdll "${a}"
    _dotnet "${a}/paintdotnet"
    # non-stock file, needs to be there:
    cp "paint.net.portable.x64/System.Runtime.Serialization.Formatters.dll" "${a}"
}
