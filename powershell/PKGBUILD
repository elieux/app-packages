# Maintainer: David Macek <david.macek.0@gmail.com>

_extract_subdir() {
    local _file="$(get_filename "${1}")"
    local _dir="${_file%.*}"
    if type bsdtar | head -1 | grep -q 'is a function'
    then
        local _original_bsdtar="$(type bsdtar | tail +2)"
    fi
    bsdtar() {
        local _extra_args=()
        if [ "${1}" = "-xf" ]
        then
            mkdir -p "${_dir}"
            _extra_args=(-C "${_dir}")
        fi
        /usr/bin/bsdtar "${_extra_args[@]}" "${@}"
    }
    extract_file "${_file}"
    unset -f bsdtar
    eval "${_original_bsdtar}"
}

extract_https@subdir() {
    _extract_subdir "${@}"
}

download_https@subdir() {
    download_file "${1/@subdir:/:}"
}

_realname=powershell
_choconame=powershell-core
pkgbase="app-${_realname}"
pkgname=("app-x86_64-${_realname}")
epoch=1
pkgver=7.5.3
pkgrel=1
pkgdesc="A cross-platform automation and configuration tool/framework"
url="https://github.com/PowerShell/PowerShell"
arch=('any')
license=('MIT')
makedepends=("mingw-w64-x86_64-jq")
provides=("${pkgbase}")
options=(!strip)
source=("PowerShell-win-x64.zip::https@subdir://github.com/PowerShell/PowerShell/releases/download/v${pkgver}/PowerShell-${pkgver}-win-x64.zip")
sha512sums=('3ccac854b8764423d9da5ffd680f8a9d68f37bcac703d17afba89109433d383fbbc5fd55a8b80d406f0f5e8b76836edeb148621fd3b99a5aca549c8938b8c578')

_dotnet() {
    local runtimetarget="$(cat "${1}.deps.json" | /mingw64/bin/jq -r '.runtimeTarget.name')"
    local netcore="$(cat "${1}.deps.json" | /mingw64/bin/jq --arg runtimetarget "${runtimetarget}" -r '.targets[$runtimetarget] | keys | .[] | select(test("^runtimepack[.]Microsoft[.]NETCore[.]App[.][Rr]untime[.]win-x64/"))')"
    local windowsdesktop="$(cat "${1}.deps.json" | /mingw64/bin/jq --arg runtimetarget "${runtimetarget}" -r '.targets[$runtimetarget] | keys | .[] | select(test("^runtimepack[.]Microsoft[.]WindowsDesktop[.]App[.][Rr]untime[.]win-x64/"))')"

    cat "${1}.deps.json" | /mingw64/bin/jq -r --arg runtimetarget "${runtimetarget}" --arg netcore "${netcore}" --arg windowsdesktop "${windowsdesktop}" '.targets[$runtimetarget] | (.[$netcore], .[$windowsdesktop]) | (.runtime, .native) | select(.) | keys | .[]' | dos2unix | sort | uniq | (cd "$(dirname "${1}")" && xargs rm -f)

    cat "${1}.deps.json" | /mingw64/bin/jq -r --arg runtimetarget "${runtimetarget}" --arg netcore "${netcore}" --arg windowsdesktop "${windowsdesktop}" 'del(.targets[$runtimetarget][$netcore]) | del(.targets[$runtimetarget][$windowsdesktop])' > "${1}.deps.json.tmp"
    mv -f "${1}.deps.json.tmp" "${1}.deps.json"

    cat "${1}.runtimeconfig.json" | /mingw64/bin/jq '.runtimeOptions |= (.framework = .includedFrameworks[-1] | del(.includedFrameworks))' > "${1}.runtimeconfig.json.tmp"
    mv -f "${1}.runtimeconfig.json.tmp" "${1}.runtimeconfig.json"
}

package() {
    local a="${pkgdir}/apps/${_realname}"
    mkdir -p "${a}"
    cp -R "PowerShell-win-x64"/* "${a}"
    _dotnet "${a}/pwsh"
}
